// All types for our Firestore data structures

export interface UserProfile {
    uid: string;
    email: string | null;
    displayName: string | null;
    photoURL: string | null;
    progress?: {
      [lessonId: string]: {
        stars: number;
        completedSessions: string[];
        badges: string[];
      };
    };
  }
  
  // Type for the entire lesson plan generated by Gemini
  export interface LessonPlan {
    id: string; // Document ID from Firestore
    title: string;
    age_group: string;
    sessions: {
      reading: ReadingSessionData;
      comprehension: ComprehensionSessionData;
      exercises: ExerciseSessionData;
      summary: SummarySessionData;
    };
  }
  
  // Session-specific types
  export interface ReadingSessionData {
    session_title: string;
    readingPassage: string;
    related_media_prompt: string;
    keyWords: {
      word: string;
      definition_en: string;
      definition_fr: string;
    }[];
    task_type: string;
    instruction: string;
    evaluation_criteria: string;
  }
  
  export interface ComprehensionSessionData {
    session_title: string;
    grammarRule: { rule: string; explanation: string };
    conjugationRule: { rule: string; explanation: string };
    spellingRule: { rule: string; explanation: string };
    quizzes: {
      drag_and_drop_grammar: {
          instruction: string;
          pairs: { item: string, correct_drop: string }[];
      },
      spelling_challenge: string[];
    };
  }
  
  export interface ExerciseSessionData {
    session_title: string;
    multiple_choice: {
      question: string;
      options: string[];
      answer: string;
    }[];
    fill_in_the_blank: {
      sentence: string;
      blank_word: string;
      hint: string;
    }[];
    sentence_ordering: {
      instruction: string;
      words: string[];
      correct_sentence: string;
    };
  }
  
  export interface SummarySessionData {
    session_title: string;
    task_type: string;
    instruction: string;
    evaluation_criteria: string;
  }

export interface Lesson {
  id: string;
  title: string;
  content: string[];
  vocabulary: Vocabulary[];
  comprehensionQuestions: ComprehensionQuestion[];
  exercises: Exercise[];
  summary: string;
  createdAt: Date;
  pdfFileName: string;
}

export interface Vocabulary {
  word: string;
  translation: string;
  pronunciation: string;
  exampleSentence: string;
}

export interface ComprehensionQuestion {
  question: string;
  answers: string[];
  correctAnswer: string;
}

export interface Exercise {
  correctAnswer: string;
  explanation: string;
  instruction: string;
  options?: string[];
  words?: string[];
  type: 'grammar' | 'spelling' | 'sentenceOrdering' | 'vocabulary';
}

export interface Submission {
  id: string;
  lessonId: string;
  userId: string;
  answers: { [key: string]: string };
  score: number;
  totalQuestions: number;
  percentage: number;
  submittedAt: {
    seconds: number;
    nanoseconds: number;
  };
  lesson?: Lesson; // Optional: To hold lesson details like the title
}

export interface User {
  uid: string;
  email: string | null;
  displayName: string | null;
  role: 'admin' | 'kid';
}